{"version":3,"sources":["assets/hero.png","blog/common/ArticleHeader.jsx","blog/article.routes.js","blog/articles/SNN.jsx","blog/articles/DNN.jsx","blog/articles/CNN.jsx","blog/articles/RNN1.jsx","blog/articles/RNN2.jsx","home/components/JourneyCard.tsx","home/components/TopBar.jsx","home/components/ProjectCard.jsx","home/components/ArticleCard.jsx","home/sections/HeroSection.jsx","home/sections/SkillsSection.tsx","home/sections/ProjectsSection.jsx","home/sections/ExperienceSection.jsx","home/sections/FooterSection.jsx","home/sections/ArticlesSection.jsx","home/Home.jsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","ArticleHeader","title","backUrl","history","useHistory","AppBar","position","style","backgroundColor","Toolbar","Grid","container","item","xs","display","alignItems","cursor","onClick","push","color","Typography","variant","justifyContent","routes","path","component","props","className","text","language","showLineNumbers","theme","monoBlue","makeStyles","width90","width","marginBottom","links","to","useStyles","cursorPointer","whiteBackground","navLinks","navLinksThin","navLinkText","marginLeft","Home","classes","isMaxWidth600","useMediaQuery","useState","showDrawer","setShowDrawer","toggleDrawer","Box","activeClass","spy","smooth","duration","Menu","map","link","Drawer","anchor","open","onClose","List","index","ListItem","button","key","ListItemIcon","HomeRounded","EqualizerRounded","WorkRounded","Book","DirectionsRounded","ContactMailRounded","getIcon","ListItemText","primary","ProjectCard","imgSrc","desc","linkTxt","Paper","margin","elevation","height","src","alt","m","flexDirection","marginTop","href","target","rel","ArticleCard","Button","HeroSection","heroSrc","mt","p","md","ml","titleDescription","flexFlowWrap","titleBtn","ml8","pr","BorderLinearProgress","withStyles","root","borderRadius","colorPrimary","bar","LinearProgress","skillsContent","skillBox","skillBoxConfidence","Skill","isLeft","skillName","confidenceLevel","isMobile","isTablet","Chip","label","value","SkillsSection","justifyContentCenter","fontWeight","fontSize","spacing","lg","ProjectsSection","sectionTitle","sectionContent","ProjectCardPadding","ExperienceCard","icon","shortDesc","date","description","keyResponsibilities","contentStyle","background","contentArrowStyle","borderRight","iconStyle","responsibility","ExperienceSection","lineColor","FooterSection","articles","ArticlesSection","overflowX","flexWrap","article","id","override","css","mb","mx10","marginRight","primaryDivider","textAlign","workCardPadding","flexFlow","isLoading","setIsLoading","useEffect","setTimeout","afterLoaded","document","getElementById","loader","size","loading","maxWidth","TopBar","name","Divider","createMuiTheme","palette","main","secondary","typography","fontFamily","App","ThemeProvider","exact","route","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8fd0766e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hero.9f089f11.png\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useHistory } from \"react-router-dom\";\nimport { AppBar, Toolbar, Typography, Grid } from \"@material-ui/core\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\n\nconst ArticleHeader = ({ title = \"\", backUrl = \"\" }) => {\n  const history = useHistory();\n\n  return (\n    <AppBar position=\"fixed\" style={{ backgroundColor: \"#ffffff\" }}>\n      <Toolbar>\n        <Grid container>\n          <Grid item xs={1} style={{ display: \"flex\", alignItems: \"center\" }}>\n            <div\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                cursor: \"pointer\",\n              }}\n              onClick={() => {\n                history.push(backUrl);\n              }}\n            >\n              <ArrowBackIcon color=\"secondary\" />\n              <Typography variant=\"h5\" color=\"secondary\">\n                Back\n              </Typography>\n            </div>\n          </Grid>\n          <Grid\n            item\n            xs={10}\n            style={{ display: \"flex\", justifyContent: \"center\" }}\n          >\n            <Typography variant=\"h4\" color=\"primary\">\n              {title}\n            </Typography>\n          </Grid>\n          <Grid item xs={1} />\n        </Grid>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nArticleHeader.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default ArticleHeader;\n","import SNN from \"./articles/SNN\";\nimport DNN from \"./articles/DNN\";\nimport CNN from \"./articles/CNN\";\nimport RNN1 from \"./articles/RNN1\";\nimport RNN2 from \"./articles/RNN2\";\n\nconst routes = [\n  {\n    path: \"/article/snn\",\n    component: SNN,\n  },\n  {\n    path: \"/article/dnn\",\n    component: DNN,\n  },\n  {\n    path: \"/article/cnn\",\n    component: CNN,\n  },\n  {\n    path: \"/article/rnn-1\",\n    component: RNN1,\n  },\n  {\n    path: \"/article/rnn-2\",\n    component: RNN2,\n  },\n];\n\nexport { routes };\n","import React from \"react\";\n// import PropTypes from 'prop-types';\nimport { Typography } from \"@material-ui/core\";\nimport { CodeBlock, monoBlue } from \"react-code-blocks\";\n\nimport { ArticleHeader } from \"../common\";\n\nimport \"../../App.scss\";\n\nconst SNN = (props) => {\n  return (\n    <div>\n      <ArticleHeader title=\"Shallow Neural Network\" backUrl=\"/\" />\n      <div className=\"article-content\">\n        <Typography>Shallow Neural Network</Typography>\n        <Typography className=\"mt-16\">\n          A simple Neural Network with 1 hidden layer\n        </Typography>\n        <Typography className=\"mt-16\">Coming Soon</Typography>\n\n        <CodeBlock\n          text={`\n          model = tf.keras.Sequential([\n            tf.keras.layers.Dense(1)\n          ])\n\n          model.compile(loss=tf.keras.losses.mae,\n                        optimizer=tf.keras.optimizers.SGD(),\n                        metrics=[\"mae\"])\n\n          model.fit(tf.expand_dims(X, axis=-1), y, epochs=5)\n          `}\n          language={\"python\"}\n          showLineNumbers={false}\n          theme={monoBlue}\n        />\n      </div>\n    </div>\n  );\n};\n\nSNN.propTypes = {};\n\nexport default SNN;\n","import React from \"react\";\n// import PropTypes from 'prop-types';\nimport { Typography } from \"@material-ui/core\";\n\nimport { ArticleHeader } from \"../common\";\n\nimport \"../../App.scss\";\n\nconst DNN = (props) => {\n  return (\n    <div>\n      <ArticleHeader title=\"Deep Neural Network\" backUrl=\"/\" />\n      <div className=\"article-content\">\n        <Typography>Deep Neural Network</Typography>\n        <Typography className=\"mt-16\">\n          A Deep Neural Network with many hidden layer\n        </Typography>\n        <Typography className=\"mt-16\">Coming Soon</Typography>\n      </div>\n    </div>\n  );\n};\n\nDNN.propTypes = {};\n\nexport default DNN;\n","import React from \"react\";\n// import PropTypes from 'prop-types';\nimport { Typography } from \"@material-ui/core\";\n\nimport { ArticleHeader } from \"../common\";\n\nimport \"../../App.scss\";\n\nconst CNN = (props) => {\n  return (\n    <div>\n      <ArticleHeader title=\"Convoluted Neural Network\" backUrl=\"/\" />\n      <div className=\"article-content\">\n        <Typography>Convoluted Neural Network</Typography>\n        <Typography className=\"mt-16\">\n          A Convoluted Neural Network with many hidden layer\n        </Typography>\n        <Typography className=\"mt-16\">Coming Soon</Typography>\n      </div>\n    </div>\n  );\n};\n\nCNN.propTypes = {};\n\nexport default CNN;\n","import React from \"react\";\n// import PropTypes from 'prop-types';\nimport { Typography } from \"@material-ui/core\";\n\nimport { ArticleHeader } from \"../common\";\n\nimport \"../../App.scss\";\n\nconst RNN1 = (props) => {\n  return (\n    <div>\n      <ArticleHeader title=\"Recurrent Neural Network - NLP\" backUrl=\"/\" />\n      <div className=\"article-content\">\n        <Typography>Recurrent Neural Network - NLP</Typography>\n        <Typography className=\"mt-16\">\n          A Recurrent Neural Network with many hidden layer\n        </Typography>\n        <Typography className=\"mt-16\">Coming Soon</Typography>\n      </div>\n    </div>\n  );\n};\n\nRNN1.propTypes = {};\n\nexport default RNN1;\n","import React from \"react\";\n// import PropTypes from 'prop-types';\nimport { Typography } from \"@material-ui/core\";\n\nimport { ArticleHeader } from \"../common\";\n\nimport \"../../App.scss\";\n\nconst RNN2 = (props) => {\n  return (\n    <div>\n      <ArticleHeader\n        title=\"Recurrent Neural Network - Time series\"\n        backUrl=\"/\"\n      />\n      <div className=\"article-content\">\n        <Typography>Recurrent Neural Network - Time series</Typography>\n        <Typography className=\"mt-16\">\n          A Recurrent Neural Network with many hidden layer\n        </Typography>\n        <Typography className=\"mt-16\">Coming Soon</Typography>\n      </div>\n    </div>\n  );\n};\n\nRNN2.propTypes = {};\n\nexport default RNN2;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Box,\n  Typography,\n  Card,\n  CardMedia,\n  CardContent,\n  makeStyles,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() => ({\n  width90: {\n    width: \"90%\",\n  },\n  container: {\n    width: \"100%\",\n    marginBottom: \"4px\",\n  },\n}));\n\nconst JourneyCard = ({ index = 0, title = \"\", description = \"\", img = \"\" }) => {\n  const classes = useStyles();\n  return (\n    <Box mt={1} mb={1} style={{ width: \"90%\" }}>\n      <Card >\n        <CardContent>\n          <Box display=\"flex\" justifyContent=\"center\">\n            <div className={classes.container}>\n              <Typography variant=\"h5\" style={{ paddingBottom: \"8px\" }}>{title}</Typography>\n              <div\n                style={{\n                  float: index % 2 === 0 ? \"right\" : \"left\",\n                  width: \"130px\",\n                  height: \"100px\",\n                  margin: \"4px 8px 0px 8px\",\n                }}\n              >\n                <CardMedia\n                  style={{ width: \"100%\", height: \"100%\" }}\n                  image={img}\n                  title=\"Live from space album cover\"\n                />\n              </div>\n              <Typography> {description}</Typography>\n            </div>\n          </Box>\n        </CardContent>\n      </Card>\n    </Box>\n  );\n};\n\nJourneyCard.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n};\n\nexport default JourneyCard;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-scroll\";\nimport {\n  AppBar,\n  Toolbar,\n  Box,\n  Drawer,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Typography,\n  makeStyles,\n  useMediaQuery,\n} from \"@material-ui/core\";\nimport {\n  HomeRounded,\n  EqualizerRounded,\n  WorkRounded,\n  DirectionsRounded,\n  ContactMailRounded,\n  Book,\n} from \"@material-ui/icons\";\nimport { Menu } from \"@material-ui/icons\";\n\nconst getIcon = (index) => {\n  switch (index) {\n    case 0: {\n      return <HomeRounded />;\n    }\n    case 1: {\n      return <EqualizerRounded />;\n    }\n    case 2: {\n      return <WorkRounded />;\n    }\n    case 3: {\n      return <Book />;\n    }\n    case 4: {\n      return <DirectionsRounded />;\n    }\n    case 5: {\n      return <ContactMailRounded />;\n    }\n    default: {\n      return <HomeRounded />;\n    }\n  }\n};\n\nconst links = [\n  // { to: \"home\", className: \"navbar-home\", title: \"Home\" },\n  {\n    to: \"skills\",\n    className: \"navbar-skills\",\n    title: \"Skills\",\n  },\n  { to: \"projects\", className: \"navbar-work\", title: \"Projects\" },\n  {\n    to: \"articles\",\n    className: \"navbar-home\",\n    title: \"Articles\",\n  },\n  {\n    to: \"experience\",\n    className: \"navbar-home\",\n    title: \"Experience & Education\",\n  },\n];\n\nconst useStyles = makeStyles(() => ({\n  cursorPointer: {\n    cursor: \"pointer\",\n  },\n  whiteBackground: {\n    backgroundColor: \"#ffffff\",\n  },\n  navLinks: {\n    width: \"70%\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n  },\n  navLinksThin: {\n    width: \"40%\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n  },\n  navLinkText: {\n    marginLeft: \"20px\",\n    cursor: \"pointer\",\n  },\n}));\n\nconst Home = () => {\n  const classes = useStyles();\n  const isMaxWidth600 = useMediaQuery(\"(max-width:600px)\");\n  const [showDrawer, setShowDrawer] = useState(false);\n\n  const toggleDrawer = () => {\n    setShowDrawer(!showDrawer);\n  };\n\n  return (\n    <>\n      <AppBar position=\"fixed\" className={classes.whiteBackground}>\n        <Toolbar>\n          <Box display=\"flex\" className=\"width-100-percent\">\n            <Box\n              className={\n                isMaxWidth600 ? \"width-60-percent\" : \"width-30-percent\"\n              }\n            >\n              <Link\n                activeClass=\"active\"\n                className=\"test1\"\n                to=\"home\"\n                spy={true}\n                smooth={true}\n                duration={500}\n              >\n                <Typography\n                  className={classes.cursorPointer}\n                  variant=\"h5\"\n                  color=\"primary\"\n                >\n                  PB Pranav Kumar\n                </Typography>\n              </Link>\n            </Box>\n            <Box\n              display=\"flex\"\n              className={\n                isMaxWidth600 ? classes.navLinksThin : classes.navLinks\n              }\n            >\n              {!isMaxWidth600 ? (\n                <>\n                  {links?.map((link) => (\n                    <Link\n                      activeClass=\"active\"\n                      className=\"test1\"\n                      to={link.to}\n                      spy={true}\n                      smooth={true}\n                      duration={500}\n                    >\n                      <Typography\n                        variant=\"h5\"\n                        color=\"secondary\"\n                        className={`${link.className} ${classes.navLinkText}`}\n                      >\n                        {link.title}\n                      </Typography>\n                    </Link>\n                  ))}\n                </>\n              ) : (\n                <Menu\n                  onClick={toggleDrawer}\n                  className={classes.cursorPointer}\n                  color={\"primary\"}\n                />\n              )}\n            </Box>\n          </Box>\n        </Toolbar>\n      </AppBar>\n      <Drawer anchor={\"right\"} open={showDrawer} onClose={toggleDrawer}>\n        <Box className=\"width-250-px\">\n          <List>\n            {links.map(({ title, to }, index) => (\n              <Link\n                activeClass=\"active\"\n                className=\"test1\"\n                to={to}\n                onClick={toggleDrawer}\n                spy={true}\n                smooth={true}\n                duration={500}\n              >\n                <ListItem button key={title}>\n                  <ListItemIcon>{getIcon(index)}</ListItemIcon>\n                  <ListItemText primary={title} />\n                </ListItem>\n              </Link>\n            ))}\n          </List>\n        </Box>\n      </Drawer>\n    </>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { Paper, Box, Typography } from \"@material-ui/core\";\n\nconst ProjectCard = ({\n  className = \"\",\n  imgSrc,\n  title,\n  desc,\n  link,\n  linkTxt,\n}) => {\n  return (\n    <Paper\n      className={className}\n      style={{ margin: \"2%\" }}\n      variant=\"outlined\"\n      elevation={3}\n    >\n      <Box\n        style={{\n          width: \"350px\",\n        }}\n      >\n        <img\n          style={{ height: \"250px\" }}\n          src={`${imgSrc}`}\n          alt=\"text\"\n          className=\"paper_image\"\n        />\n        <Box\n          m={1}\n          display=\"flex\"\n          style={{\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n          }}\n        >\n          <Typography variant=\"h5\" color=\"primary\">\n            {`${title}`}\n          </Typography>\n          <Typography variant=\"body1\" style={{ marginTop: \"5px\" }}>\n            {`${desc}`}\n          </Typography>\n          <Typography style={{ marginTop: \"5px\" }}>\n            <a\n              href={`${link}`}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"text-blue\"\n            >\n              {`${linkTxt}`}\n            </a>\n          </Typography>\n        </Box>{\" \"}\n      </Box>\n    </Paper>\n  );\n};\n\nexport default ProjectCard;\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Paper, Box, Typography, Button } from \"@material-ui/core\";\n\nconst ArticleCard = ({ className = \"\", imgSrc, title, desc, link }) => {\n  const history = useHistory();\n\n  const handleClick = () => {\n    history.push(link);\n  };\n\n  return (\n    <Paper\n      className={className}\n      style={{ margin: \"2%\" }}\n      variant=\"outlined\"\n      elevation={3}\n    >\n      <Box\n        style={{\n          width: \"350px\",\n        }}\n      >\n        <img\n          style={{ height: \"250px\", margin: \"4px\" }}\n          src={`${imgSrc}`}\n          alt=\"text\"\n          className=\"paper_image\"\n        />\n        <Box\n          m={1}\n          display=\"flex\"\n          style={{\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n          }}\n        >\n          <Typography variant=\"h5\" color=\"primary\">\n            {`${title}`}\n          </Typography>\n          <Typography variant=\"body1\" style={{ marginTop: \"5px\" }}>\n            {`${desc}`}\n          </Typography>\n          <Typography style={{ marginTop: \"5px\" }}>\n            <Box\n              display=\"flex\"\n              style={{\n                justifyContent: \"center\",\n              }}\n            >\n              <Button variant=\"contained\" onClick={handleClick}>\n                Open Article\n              </Button>\n            </Box>\n          </Typography>\n        </Box>{\" \"}\n      </Box>\n    </Paper>\n  );\n};\n\nexport default ArticleCard;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Box, Grid, Typography, Button } from \"@material-ui/core\";\nimport { Link } from \"react-scroll\";\n\nconst HeroSection = ({ isMaxWidth600 = false, classes = {}, heroSrc = \"\" }) => {\n  return (\n    <Box\n      mt={10}\n      p={isMaxWidth600 ? 2 : 0}\n      display=\"flex\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n    >\n      <Grid container component={Box}>\n        <Grid item md={7}>\n          <Box\n            ml={isMaxWidth600 ? 0 : 4}\n            display=\"flex\"\n            flexDirection=\"column\"\n            height=\"100%\"\n            justifyContent=\"center\"\n          >\n            <Typography variant=\"h3\" className={classes.title}>\n              I'm a Machine Learning Engineer\n            </Typography>\n            <Typography variant=\"body1\" className={classes.titleDescription}>\n              I have about 3 years of experience as a Software Engineer. I can\n              architect, train, deploy and maintain Machine Learning & Deep\n              Learning micro-services. I can create Machine Learning Pipelines\n              using Kubeflow and APIs using FastAPI.\n            </Typography>\n            <Box display=\"flex\" className={classes.flexFlowWrap}>\n              <Link\n                activeClass=\"active\"\n                className=\"test1\"\n                to=\"projects\"\n                spy={true}\n                smooth={true}\n                duration={500}\n              >\n                <Button variant=\"contained\" className={classes.titleBtn}>\n                  Projects\n                </Button>\n              </Link>\n              <Button\n                variant=\"contained\"\n                className={`${classes.ml8} ${classes.titleBtn}`}\n                target=\"_blank\"\n                href=\"https://github.com/pbpranavk?tab=repositories\"\n              >\n                Github\n              </Button>\n              <Button\n                variant=\"contained\"\n                className={`${classes.ml8} ${classes.titleBtn}`}\n                target=\"_blank\"\n                href=\"https://www.kaggle.com/pranavcoder\"\n              >\n                Kaggle\n              </Button>\n              <Button\n                variant=\"contained\"\n                className={`${classes.ml8} ${classes.titleBtn}`}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href=\"https://docs.google.com/document/d/1GqDESiaxp-2xVKV23UZqz4Zq5I0Dyr_w3m2ylfVL4gw/edit?usp=sharing\"\n              >\n                My Resume\n              </Button>\n            </Box>\n          </Box>\n        </Grid>\n        <Grid item md={5}>\n          <Box\n            display=\"flex\"\n            mt={2}\n            pr={isMaxWidth600 ? 0 : 4}\n            justifyContent={isMaxWidth600 ? \"flex-start\" : \"flex-end\"}\n            alignItems=\"center\"\n            height=\"100%\"\n          >\n            <img style={{ width: \"90%\" }} src={heroSrc} alt=\"home\" />\n          </Box>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nHeroSection.propTypes = {\n  isMaxWidth600: PropTypes.bool,\n  classes: PropTypes.object,\n  heroSrc: PropTypes.string,\n};\n\nexport default HeroSection;\n","import React from \"react\";\nimport {\n  Box,\n  Typography,\n  LinearProgress,\n  useMediaQuery,\n  makeStyles,\n  Grid,\n  Chip,\n} from \"@material-ui/core\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 23,\n    borderRadius: 5,\n    width: \"100%\",\n  },\n  colorPrimary: {\n    backgroundColor: \"secondary\",\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: \"#e38e54\",\n  },\n}))(LinearProgress);\n\nconst useStyles = makeStyles({\n  skillsContent: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  skillBox: {\n    width: \"50%\",\n    justifyContent: \"center\",\n  },\n  skillBoxConfidence: {\n    width: \"30%\",\n    justifyContent: \"center\",\n  },\n});\n\nconst Skill = ({ isLeft = false, skillName, confidenceLevel }) => {\n  const classes = useStyles();\n  const isMobile = useMediaQuery(\"(max-width:600px)\");\n  const isTablet = useMediaQuery(\"(max-width:1200px)\");\n\n  if (isMobile) {\n    return (\n      <div className=\"flex-justify-content-center\">\n        <Chip className=\"mx-8 mt-8\" label={skillName} />\n      </div>\n    );\n  }\n\n  return (\n    <Box\n      mt={4}\n      display=\"flex\"\n      className={`${classes.skillsContent} ${\n        isTablet\n          ? \"justify-content-center\"\n          : isLeft\n          ? \"justify-content-end\"\n          : \"justify-content-start\"\n      }`}\n    >\n      <Box display=\"flex\" className={\"width-85-percent\"} alignItems={\"center\"}>\n        <Box display=\"flex\" style={{ width: \"70%\" }}>\n          <Typography variant=\"h5\" color=\"secondary\">\n            {skillName}\n          </Typography>\n        </Box>\n        <Box display=\"flex\" className={classes.skillBoxConfidence}>\n          <BorderLinearProgress variant=\"determinate\" value={confidenceLevel} />\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nconst SkillsSection = ({ classes = { justifyContentCenter: \"\" } }) => {\n  const isMobile = useMediaQuery(\"(max-width:600px)\");\n\n  return (\n    <Box mt={10}>\n      <Box display=\"flex\" className={classes.justifyContentCenter}>\n        <Typography\n          variant=\"h3\"\n          style={{ fontWeight: \"bold\", fontSize: \"40px\" }}\n          color=\"primary\"\n        >\n          My Skills\n        </Typography>\n      </Box>\n      <Grid className=\"mt-16\" container={true} spacing={isMobile ? 0 : 4}>\n        <Grid item xs={12} lg={6}>\n          <Skill\n            skillName=\"Architecting & Training Neural Nets\"\n            confidenceLevel={85}\n            isLeft={true}\n          />\n          <Skill\n            skillName=\"Data Preprocessing: Pandas, Scikit\"\n            confidenceLevel={75}\n            isLeft={true}\n          />\n          <Skill\n            skillName=\"Data Visualisation: Matplotlib\"\n            confidenceLevel={55}\n            isLeft={true}\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <Skill\n            skillName=\"Data Structures & Algorithms \"\n            confidenceLevel={85}\n          />\n          <Skill skillName=\"FastAPI & SQLAlchemy\" confidenceLevel={75} />\n          <Skill\n            skillName=\"MLOps for ML Pipelines in Production\"\n            confidenceLevel={55}\n          />\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default SkillsSection;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Box, Typography } from \"@material-ui/core\";\n\nimport { ProjectCard } from \"../components\";\n\nconst ProjectsSection = ({ classes = {} }) => {\n  return (\n    <>\n      <Box mt={10}>\n        <Box display=\"flex\" className={classes.justifyContentCenter}>\n          <Typography\n            variant=\"h3\"\n            className={classes.sectionTitle}\n            color=\"primary\"\n          >\n            Projects\n          </Typography>\n        </Box>\n        <Box display=\"flex\" className={classes.sectionContent}>\n          {/* <ProjectCard\n            imgSrc={\"react_animated_navbar.png\"}\n            title={\"Animated Navbar in React\"}\n            desc={\n              \"A Stripe style animated Navbar built with React, styled-components & react-flip library. \"\n            }\n            link={\"https://codesandbox.io/s/react-stripe-style-navbar-5r8x4\"}\n            linkTxt={\"View on CodeSandbox\"}\n          /> */}\n          {/* <ProjectCard\n            imgSrc={\"spidywebar.png\"}\n            title={\"Augmented Reality on the web\"}\n            desc={\n              \"A marker based Augmented Reality app for the web created with react and aframe.\"\n            }\n            link={\"https://github.com/pbpranavk/archive/tree/master/spidyWebAR\"}\n            linkTxt={\"View on Github\"}\n          /> */}\n\n          {/* <ProjectCard\n            imgSrc={\"gradientCards2.png\"}\n            title={\"Gradient Cards\"}\n            desc={`A set of cards with smooth gradients that go easy on eye as weel as attract\n                  focus which are built with React. These can be used when you want to style your UI with rather a vibrant colors\n                  to provide a soothing effect to the user.`}\n            link={\"https://8xzcw.csb.app/\"}\n            linkTxt={\"View deployed version\"}\n          /> */}\n\n          {/* <ProjectCard\n            imgSrc={\"event_driven_arch.png\"}\n            title={\"Exploring react query\"}\n            desc={`A codesandbox where I go throught the well established API called react-query which can be used\n                     along with axios to retrieve data from a REST/GraphQL API. It can also mutate(POST, PUT, DEL) data in the DB`}\n            link={\"https://g658q.csb.app/\"}\n            linkTxt={\"View deployed version\"}\n          /> */}\n\n          <ProjectCard\n            imgSrc={\"fruit_veggies.jpeg\"}\n            title={\"Fruit or Vegetable\"}\n            desc={`A Convoluted Neural Network (CNN) written in Tensorflow on a 2GB\n             dataset of fruits and vegetables. This is a multi-class classifier with\n              more than 35 classes.`}\n            link={\"https://www.kaggle.com/pranavcoder/fruit-or-vegetable\"}\n            linkTxt={\"View on Kaggle\"}\n          />\n\n          <ProjectCard\n            imgSrc={\"news.jpeg\"}\n            title={\"What’s the NEWS\"}\n            desc={`A Recurrent Neural Network (RNN) written in PyTorch\n             on a dataset of 200K news headlines from 2012 to 2018 from HuffPost.\n              This model can tag untagged news articles as well as it can identify\n               the type of language used in an article.`}\n            link={\"https://www.kaggle.com/pranavcoder/what-s-the-news\"}\n            linkTxt={\"View on Kaggle\"}\n          />\n\n          <ProjectCard\n            imgSrc={\"delhi_climate.jpeg\"}\n            title={\"Delhi Climate\"}\n            desc={`A time series model that models the climate patterns of Delhi based\n             on data from Jan 2013 to April 2017. I use windowing and LSTM to build\n              a predictive time series model.`}\n            link={\"https://www.kaggle.com/pranavcoder/delhi-climate\"}\n            linkTxt={\"View on Kaggle\"}\n          />\n\n          <ProjectCard\n            className={classes.ProjectCardPadding}\n            imgSrc={\"transfer_learning_img.jpeg\"}\n            title={\"Transfer Learning\"}\n            desc={`In this notebook, I use transfer learning to retrain\n            state-of-the-art Neural Networks on the required dataset to get\n            optimal results. The datasets I used are Fruit-Vegetable dataset for CNN and\n            News data for Text. I use MobileNet for transfer learning in CNN and\n            BERT for Text Model. I use Tensorflow for transfer learning.\n            `}\n            link={\"https://www.kaggle.com/pranavcoder/transfer-learning\"}\n            linkTxt={\"View on Kaggle\"}\n          />\n\n          <ProjectCard\n            imgSrc={\"django-react-k8s.png\"}\n            title={\"A fully orchestrated app\"}\n            desc={`A full stack app built with django, django-rest-framework, react. I containerized\n                it using docker and wrote yml scripts for deployments, services to create resource in Kubernetes.\n                I've written those scripts for django main service(react is served from it), MySQL, Postgres & Redis\n                `}\n            link={\n              \"https://github.com/pbpranavk/full_stack_app_with_orchestration\"\n            }\n            linkTxt={\"Check it out on Github\"}\n          />\n\n          <ProjectCard\n            imgSrc={\"event_driven_arch.png\"}\n            title={\"A full stack application with MERN, PyTorch and FastAPI\"}\n            desc={`A full stack project where the Frontend is written in React.\n            The Backend consists of two micro-services where one acts as the gateway.\n            The gateway service is an Express service with TypeORM acting as an ORM\n            abstraction for MYSQL. It is a TODOs application which serves REST APIs. The FastAPI microservice is\n            a single endpoint service which gets data and determines if a person has diabetes or not. The\n            model is trained in PyTorch on Pima Indian Diabetes dataset.\n                `}\n            link={\"https://github.com/pbpranavk/mern_pyth\"}\n            linkTxt={\"Check it out on Github\"}\n          />\n        </Box>\n      </Box>\n    </>\n  );\n};\n\nProjectsSection.propTypes = {\n  classes: PropTypes.object,\n};\n\nexport default ProjectsSection;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport {\n  VerticalTimeline,\n  VerticalTimelineElement,\n} from \"react-vertical-timeline-component\";\nimport WorkIcon from \"@material-ui/icons/Work\";\nimport SchoolIcon from \"@material-ui/icons/School\";\nimport StarIcon from \"@material-ui/icons/Star\";\n\nimport \"react-vertical-timeline-component/style.min.css\";\n\n// import { JourneyCard } from \"../components\";\n\nconst ExperienceCard = ({\n  icon = <></>,\n  title = \"\",\n  shortDesc = \"\",\n  date = \"\",\n  description = \"\",\n  keyResponsibilities = [],\n}) => {\n  return (\n    <VerticalTimelineElement\n      className=\"vertical-timeline-element--work\"\n      contentStyle={{ background: \"rgb(33, 150, 243)\", color: \"#fff\" }}\n      contentArrowStyle={{ borderRight: \"7px solid  rgb(33, 150, 243)\" }}\n      date={date}\n      iconStyle={{ background: \"rgb(33, 150, 243)\", color: \"#fff\" }}\n      icon={icon}\n    >\n      <h3 className=\"vertical-timeline-element-title\">{title}</h3>\n      <h4 className=\"vertical-timeline-element-subtitle\">{`${shortDesc} ${date}`}</h4>\n      <p>{description} </p>\n      <p>Key responsibilities include:</p>\n      <ul style={{ marginTop: \"0px\" }}>\n        {keyResponsibilities?.map((responsibility) => (\n          <li>{responsibility}</li>\n        ))}\n      </ul>\n    </VerticalTimelineElement>\n  );\n};\n\nconst ExperienceSection = ({ classes = {} }) => {\n  return (\n    <Box mt={10}>\n      <Box display=\"flex\" className={classes.justifyContentCenter}>\n        <Typography\n          variant=\"h3\"\n          className={classes.sectionTitle}\n          color=\"primary\"\n        >\n          Experience & Education\n        </Typography>\n      </Box>\n      <VerticalTimeline lineColor={\"#222\"}>\n        <ExperienceCard\n          icon={<WorkIcon />}\n          title={\"Senior Software Engineer\"}\n          shortDesc={\"Beautiful Code LLP\"}\n          date={\"(May 2020 – Present)\"}\n          description={\n            \"I’m currently working as Sr. Software Engineer and I’ve led the development of culture-easy’s web app from scratch using React.\"\n          }\n          keyResponsibilities={[\n            \"Ownership of Frontend\",\n            \"Scaling the app for a smooth experience\",\n            \"Ensuring Best practices,Maintainability & Extendability\",\n            \"Interaction with Product Owners\",\n          ]}\n        />\n        <ExperienceCard\n          icon={<WorkIcon />}\n          title={\"Software Engineer\"}\n          shortDesc={\"Beautiful Code LLP\"}\n          date={\"(June 2019 – May 2020)\"}\n          description={\n            \"Travel Portal: Worked for a US-based client to build a system involving Django, React and Kubernetes.\"\n          }\n          keyResponsibilities={[\n            \"Developing robust APIs and Database Models\",\n            \"Designing asynchronous systems using python and microservices\",\n            \"Building Components for dashboards with graphs and tables\",\n            \"Interaction with clients\",\n          ]}\n        />\n        <ExperienceCard\n          icon={<WorkIcon />}\n          title={\"Associate Engineer\"}\n          shortDesc={\"Kony IT Services Pvt Ltd\"}\n          date={\"(June 2018 – June 2019)\"}\n          description={\n            \"As an Associate Engineer, I worked on building a cross-platform app (Android & IOS) for an Indian Bank. I worked here during my final year of college balancing both work and study. I was one of the 6 students selected from our batch.\"\n          }\n          keyResponsibilities={[\n            \"Optimizing existing APIs\",\n            \"Quickly building app screens\",\n            \"Troubleshooting & fixing issues from legacy code\",\n          ]}\n        />\n        <VerticalTimelineElement\n          className=\"vertical-timeline-element--education\"\n          date=\"2015 - 2019\"\n          iconStyle={{ background: \"rgb(233, 30, 99)\", color: \"#fff\" }}\n          icon={<SchoolIcon />}\n        >\n          <h3 className=\"vertical-timeline-element-title\">\n            Bachelor of Technology in Computer science and Engineering\n          </h3>\n          <h4 className=\"vertical-timeline-element-subtitle\">\n            CGPA: 3.3 / 4.0\n          </h4>\n          <p>\n            Subjects Taken: Python Programming, Data Structures and Algorithms,\n            Design Patterns, Operating Systems, Computer Networks, Big Data\n            Analytics, Data Visualization, Machine Learning & Deep Learning\n          </p>\n        </VerticalTimelineElement>\n        <VerticalTimelineElement\n          iconStyle={{ background: \"rgb(16, 204, 82)\", color: \"#fff\" }}\n          icon={<StarIcon />}\n        />\n      </VerticalTimeline>\n    </Box>\n  );\n};\n\nExperienceSection.propTypes = {\n  classes: PropTypes.object,\n};\n\nexport default ExperienceSection;\n","import React from \"react\";\n// import PropTypes from \"prop-types\";\nimport { Button } from \"@material-ui/core\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\n\nconst FooterSection = (props) => {\n  return (\n    <div className=\"flex footer mt-24\">\n      <Button\n        href=\"https://github.com/pbpranavk/\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <GitHubIcon className=\"footer-icon margin-right-10px wheat-color\" />\n      </Button>\n      <Button\n        href=\"https://twitter.com/pbpranav24/\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <TwitterIcon className=\"footer-icon margin-right-10px wheat-color\" />\n      </Button>\n      <Button\n        href=\"https://www.linkedin.com/in/p-b-pranav-kumar/\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <LinkedInIcon className=\"footer-icon wheat-color\" />\n      </Button>\n    </div>\n  );\n};\n\nFooterSection.propTypes = {};\n\nexport default FooterSection;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Box, Typography } from \"@material-ui/core\";\n\nimport { ArticleCard } from \"../components\";\n\nconst articles = [\n  {\n    key: 1,\n    imgSrc: \"snn.svg\",\n    title: \"Shallow Neural Network\",\n    desc: `This article covers how to build a very basic Neural Network\n            with layers and activation function.\n            `,\n    link: \"/article/snn\",\n  },\n  {\n    key: 2,\n    imgSrc: \"dnn.svg\",\n    title: \"Deep Neural Network\",\n    desc: `Extending the Shallow neural network to multiple hidden layers\n  and training it over many epochs.`,\n    link: \"/article/dnn\",\n  },\n  {\n    key: 3,\n    imgSrc: \"cnn.svg\",\n    title: \"Convoluted Neural Network\",\n    desc: `Using Convolutions and pooling to build Neural Networks that can\n            deal better with image data.`,\n    link: \"/article/cnn\",\n  },\n  {\n    key: 4,\n    imgSrc: \"rnn-1.svg\",\n    title: \"Recurrent Neural Network for NLP\",\n    desc: `Using Memory (LSTM & GRUs) and Word2Vec to work on NLP Tasks`,\n    link: \"/article/rnn-1\",\n  },\n  {\n    key: 5,\n    imgSrc: \"rnn-2.svg\",\n    title: \"Recurrent Neural Network for Time Series\",\n    desc: `Using windowing and Memory (LSTM & GRUs) to work with time series data`,\n    link: \"/article/rnn-2\",\n  },\n];\n\nconst ArticlesSection = ({ classes = {} }) => {\n  return (\n    <>\n      <Box mt={10}>\n        <Box display=\"flex\" className={classes.justifyContentCenter}>\n          <Typography\n            variant=\"h3\"\n            className={classes.sectionTitle}\n            color=\"primary\"\n          >\n            Articles\n          </Typography>\n        </Box>\n        <Box\n          display=\"flex\"\n          className={`${classes.sectionContent} article-container`}\n          style={{\n            overflowX: \"auto\",\n            height: \"500px\",\n            flexWrap: \"nowrap\",\n            justifyContent: \"flex-start\",\n            width: \"95%\",\n            margin: \"auto\",\n          }}\n        >\n          {articles?.map((article) => (\n            <ArticleCard\n              id={article?.key}\n              imgSrc={article?.imgSrc}\n              title={article?.title}\n              desc={article?.desc}\n              link={article?.link}\n            />\n          ))}\n        </Box>\n      </Box>\n    </>\n  );\n};\n\nArticlesSection.propTypes = {\n  classes: PropTypes.object,\n};\n\nexport default ArticlesSection;\n","import React, { useState, useEffect } from \"react\";\nimport { Element } from \"react-scroll\";\nimport { Box, Divider, useMediaQuery, makeStyles } from \"@material-ui/core\";\nimport PacmanLoader from \"react-spinners/PacmanLoader\";\n\nimport { TopBar } from \"./components\";\nimport {\n  HeroSection,\n  SkillsSection,\n  ProjectsSection,\n  ExperienceSection,\n  FooterSection,\n  ArticlesSection,\n} from \"./sections\";\n// import ArticlesList from \"../blog/ArticlesList\";\n\nimport heroSrc from \"../assets/hero.png\";\nimport \"../App.scss\";\nimport { css } from \"@emotion/core\";\n\nconst override = css`\n  display: block;\n  margin: 50px 20%;\n  border-color: red;\n`;\n\nconst useStyles = makeStyles((theme) => ({\n  mt: {\n    marginTop: \"8px\",\n  },\n  mb: {\n    marginBottom: \"8px\",\n  },\n  ml8: { marginLeft: \"8px\" },\n  mx10: {\n    marginRight: \"5%\",\n    marginLeft: \"5%\",\n  },\n  primaryDivider: {\n    backgroundColor: \"#E86410\",\n  },\n  textAlign: {\n    textAlign: \"justify\",\n  },\n  workCardPadding: {},\n  title: {\n    color: \"#000\",\n    fontSize: \"45px\",\n  },\n  titleDescription: {\n    color: \"#A4A4A4\",\n    fontSize: \"28px\",\n    marginTop: \"20px\",\n  },\n  flexFlowWrap: {\n    flexFlow: \"wrap\",\n  },\n  titleBtn: {\n    marginTop: \"40px\",\n    backgroundColor: \"rgba(232, 100, 16, 0.69)\",\n  },\n  justifyContentCenter: {\n    justifyContent: \"center\",\n  },\n  sectionTitle: {\n    fontWeight: \"bold\",\n    fontSize: \"40px\",\n  },\n  sectionContent: {\n    flexWrap: \"wrap\",\n    justifyContent: \"center\",\n  },\n}));\n\nconst Home = (props) => {\n  const classes = useStyles();\n  const [isLoading, setIsLoading] = useState(true);\n  const isMaxWidth600 = useMediaQuery(\"(max-width:600px)\");\n\n  useEffect(() => {\n    setTimeout(() => {\n      setIsLoading(false);\n      const afterLoaded = document.getElementById(\"after-loader\");\n      if (afterLoaded) {\n        afterLoaded.className = \"after-loaded-visible\";\n      }\n      const loader = document.getElementById(\"loader\");\n      if (loader) {\n        loader.className = \" display-none\";\n      }\n    }, 1000);\n  }, []);\n\n  if (isLoading) {\n    return (\n      <div className=\"loader\" id=\"loader\">\n        <PacmanLoader\n          css={override}\n          size={150}\n          margin={1}\n          color={\"#000000\"}\n          loading={isLoading}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      <div style={{ maxWidth: \"1440px\", margin: \"auto\" }}>\n        <TopBar />\n        <Box>\n          <Element name=\"home\">\n            <HeroSection\n              isMaxWidth600={isMaxWidth600}\n              classes={classes}\n              heroSrc={heroSrc}\n            />\n          </Element>\n\n          <Element name=\"skills\">\n            <SkillsSection classes={classes} />\n          </Element>\n\n          <Element name=\"projects\">\n            <ProjectsSection classes={classes} />\n          </Element>\n\n          <Element name=\"articles\">\n            <ArticlesSection classes={classes} />\n          </Element>\n\n          <Element name=\"experience\">\n            <ExperienceSection classes={classes} />\n          </Element>\n        </Box>\n      </div>\n      <Divider />\n      <FooterSection />\n    </div>\n  );\n};\n\nHome.propTypes = {};\n\nexport default Home;\n","import React from \"react\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport { routes } from \"./blog/article.routes\";\nimport Home from \"./home/Home\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: { main: \"#E86410\" },\n    secondary: { main: \"#DDAB8B\" },\n  },\n  typography: {\n    fontFamily: '\"Comic Sans MS\"',\n  },\n});\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Router>\n        <Switch>\n          <Route exact={true} path=\"/\">\n            <Home />\n          </Route>\n          {routes?.map((route) => (\n            <Route path={route.path} exact={true}>\n              {route.component}\n            </Route>\n          ))}\n          <Route path=\"*\" exact={true}>\n            Not found\n          </Route>\n        </Switch>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}