{"version":3,"sources":["App.tsx","appUtils.ts","serviceWorker.ts","index.tsx"],"names":["override","css","toggle","items","document","getElementsByClassName","itemKey","Number","isNaN","parseInt","item","className","includes","App","useState","isLoading","setIsLoading","name","setName","msg","setMsg","useEffect","setTimeout","afterLoaded","getElementById","loader","Button","onClick","scroll","scrollToTop","activeClass","to","spy","smooth","duration","id","size","margin","color","loading","settings","canvas","canvasFillSpace","width","height","useBouncyWalls","particle","particleCount","minSize","maxSize","velocity","directionAngle","directionAngleVariance","minSpeed","maxSpeed","opacity","minOpacity","maxOpacity","opacityTransitionTime","Paper","variant","elevation","src","alt","href","target","rel","TextField","label","onChange","event","value","multiline","rowsMax","window","open","sendEmail","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1cd316c4.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.scss\";\n\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\n\nimport { Link, Element, animateScroll as scroll } from \"react-scroll\";\n\nimport { css } from \"@emotion/core\";\nimport PacmanLoader from \"react-spinners/PacmanLoader\";\nimport ParticleBackground from \"react-particle-backgrounds\";\n\nimport { sendEmail } from \"./appUtils\";\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\nconst toggle = () => {\n  const items = document.getElementsByClassName(\"item\");\n  for (const itemKey in items) {\n    if (!Number.isNaN(parseInt(itemKey))) {\n      const item = items[itemKey];\n      if (item.className) {\n        if (!item.className.includes(\"active\")) {\n          item.className = \"item active\";\n        } else {\n          item.className = \"item\";\n        }\n      }\n    }\n  }\n};\n\nfunction App() {\n  const [isLoading, setIsLoading] = useState(true);\n  const [name, setName] = useState(\"\");\n  const [msg, setMsg] = useState(\"\");\n\n  useEffect(() => {\n    setTimeout(() => {\n      setIsLoading(false);\n      const afterLoaded = document.getElementById(\"after-loader\");\n      if (afterLoaded) {\n        afterLoaded.className = \"after-loaded-visible\";\n      }\n      const loader = document.getElementById(\"loader\");\n      if (loader) {\n        loader.className = \" display-none\";\n      }\n    }, 3000);\n  }, []);\n\n  const scrollToTop = () => {\n    scroll.scrollToTop();\n  };\n\n  const settings = {\n    canvas: {\n      canvasFillSpace: true,\n      width: 200,\n      height: 500,\n      useBouncyWalls: false,\n    },\n    particle: {\n      particleCount: 50,\n      color: \"#ff417d\",\n      minSize: 2,\n      maxSize: 5,\n    },\n    velocity: {\n      directionAngle: 0,\n      directionAngleVariance: 360,\n      minSpeed: 1,\n      maxSpeed: 5,\n    },\n    opacity: {\n      minOpacity: 0,\n      maxOpacity: 0.5,\n      opacityTransitionTime: 3000,\n    },\n  };\n\n  return (\n    <div className=\"App\">\n      <nav>\n        <ul className=\"menu\">\n          <li className=\"logo\">\n            <Button\n              className=\"color-white\"\n              onClick={() => {\n                scrollToTop();\n                toggle();\n              }}\n            >\n              Pranav\n            </Button>\n          </li>\n          <li className=\"item\">\n            <Link\n              activeClass=\"active\"\n              className=\"nav-elem\"\n              to=\"frontend\"\n              spy={true}\n              smooth={true}\n              duration={1000}\n            >\n              <Button onClick={toggle}> Frontend </Button>\n            </Link>\n          </li>\n          <li className=\"item\">\n            <Link\n              activeClass=\"active\"\n              className=\"nav-elem\"\n              to=\"backend\"\n              spy={true}\n              smooth={true}\n              duration={1000}\n            >\n              <Button onClick={toggle}> Backend </Button>\n            </Link>\n          </li>\n          <li className=\"item\">\n            <Link\n              activeClass=\"active\"\n              className=\"nav-elem\"\n              to=\"contact-me\"\n              spy={true}\n              smooth={true}\n              duration={1000}\n            >\n              <Button className=\"margin-right-20px\" onClick={toggle}>\n                Contact Me\n              </Button>\n            </Link>\n          </li>\n          <li className=\"toggle\" onClick={toggle}>\n            <Button className=\"color-white\">\n              <MenuIcon />\n            </Button>\n          </li>\n        </ul>\n      </nav>\n      <div className=\"loader\" id=\"loader\">\n        <PacmanLoader\n          css={override}\n          size={150}\n          margin={2}\n          color={\"#123abc\"}\n          loading={isLoading}\n        />\n      </div>\n      <div id=\"after-loader\" className=\"after-loaded-hidden\">\n        <Element name=\"hero\" className=\"element first-hero\">\n          <div className=\"title\">\n            <ParticleBackground settings={settings} />\n            <h1 className=\"title-text\">PRANAV KUMAR</h1>\n            <h3>\n              <strong>\n                I <strong> build, deploy & maintain </strong> apps\n              </strong>\n            </h3>\n          </div>\n        </Element>\n\n        <Element name=\"frontend\" className=\"element\">\n          <div className=\"flex\">\n            <h1>| | |</h1>\n          </div>\n        </Element>\n\n          <div className=\"flex\">\n            <h3> Frontend & Apps - (React, Swift & Unity) </h3>\n          </div>\n        <div className=\"flex flex-wrap\">\n          <Paper className=\"hero-paper \" variant=\"outlined\" elevation={3}>\n            <img src=\"ar_spidy.png\" alt=\"text\" className=\"paper_image\" />\n            <h4>Marker based Augmented Reality app</h4>\n            <p>Built with Unity and Vuforia. Written in C#</p>\n            <p>\n              <a\n                href=\"https://github.com/pbpranavk/Ar_Project1\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"text-blue\"\n              >\n                View on Github\n              </a>\n            </p>\n          </Paper>\n          <Paper className=\"hero-paper \" variant=\"outlined\" elevation={3}>\n            <img\n              src=\"collage_jet_shooter.jpg\"\n              alt=\"text\"\n              className=\"paper_image\"\n            />\n            <h4>Jet Shooter AR(Android App)</h4>\n            <p>\n              This is an augmented reality app where few jet shooters attack\n              your neighborbood. Save your neighborhood by shooting those enemy\n              jets down\n            </p>\n            <p>\n              <a\n                href=\"https://github.com/pbpranavk/Markerless-AR/\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"text-blue\"\n              >\n                View on Github\n              </a>\n            </p>\n          </Paper>\n          <Paper className=\"hero-paper \" variant=\"outlined\" elevation={3}>\n            <img src=\"vr_game.png\" alt=\"text\" className=\"paper_image\" />\n            <h4>Zoombie Shooter VR Game</h4>\n            <p>\n              This is a Virtual reality game built with unity and Google's\n              Daydream View and Cardboard SDK.\n            </p>\n            <p>\n              <a\n                href=\"https://github.com/pbpranavk/VRGAME\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"text-blue\"\n              >\n                View on Github\n              </a>\n            </p>\n          </Paper>\n        </div>\n\n        <Element name=\"backend\" className=\"element\">\n        <div className=\"flex\">\n          <h1>| | |</h1>\n        </div>\n          </Element>\n          <div className=\"flex\">\n            <h3> Backend & Deep Learning  - (Go, Python & Java) </h3>\n          </div>\n\n        <div className=\"flex flex-wrap\">\n          <Paper className=\"hero-paper \" variant=\"outlined\" elevation={3}>\n            <img\n              src=\"monolithic_vs_microservice.png\"\n              alt=\"text\"\n              className=\"paper_image\"\n            />\n            <h4>Microservices Architecture Mock Application</h4>\n            <p>In this project I break a monolith using gRPC, GraphQL, REST.</p>\n            <p>\n              <a\n                href=\"https://github.com/pbpranavk/\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"text-blue\"\n              >\n                Coming Soon on Github\n              </a>\n            </p>\n          </Paper>\n          <Paper className=\"hero-paper \" variant=\"outlined\" elevation={3}>\n            <img\n              src=\"event_driven_arch.png\"\n              alt=\"text\"\n              className=\"paper_image\"\n            />\n            <h4>Event driven architecture paradigm</h4>\n            <p>\n              This project deals with generation, processing and consumption of\n              event between multiple microservices{\" \"}\n            </p>\n            <p>\n              <a\n                href=\"https://github.com/pbpranavk/\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"text-blue\"\n              >\n                Coming Soon on Github\n              </a>\n            </p>\n          </Paper>\n          <Paper className=\"hero-paper \" variant=\"outlined\" elevation={3}>\n            <img src=\"kubeflow.png\" alt=\"text\" className=\"paper_image\" />\n            <h4>Ml as a Service using Kubeflow</h4>\n            <p>\n              This project has the configrations for setting up a predictive\n              model built using Tensorflow on Kubernetes. This repo also has\n              config for continous training of the predictive model when data\n              changes.\n              <a\n                href=\"https://github.com/pbpranavk/\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"text-blue\"\n              >\n                Coming Soon on Github\n              </a>\n            </p>\n          </Paper>\n        </div>\n\n        <div className=\"flex flex-wrap\">\n          <Paper className=\"hero-paper\" variant=\"outlined\" elevation={3}>\n            <img src=\"dhoni.jpeg\" alt=\"text\" className=\"paper_image\" />\n            <h4>Regression Network</h4>\n            <p>\n              In this kernel I use multiple predictive models on cricket datset\n            </p>\n            <a\n              href=\"https://www.kaggle.com/pranavcoder/cricket-stats/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"text-blue\"\n            >\n              View on Kaggle\n            </a>\n          </Paper>\n          <Paper className=\"hero-paper\" variant=\"outlined\" elevation={3}>\n            <img src=\"cancer_testing.jpg\" alt=\"text\" className=\"paper_image\" />\n            <h4>ANN on Indians Diabetes Database</h4>\n            <p>\n              In this kernel I use Keras to build a neural network\n              to predict if a patient has diabetes or not\n            </p>\n            <a\n              href=\"https://www.kaggle.com/pranavcoder/keras-ann\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"text-blue\"\n            >\n              View on kaggle\n            </a>\n          </Paper>\n          <Paper className=\"hero-paper\" variant=\"outlined\" elevation={3}>\n            <img src=\"lip_reading.jpeg\" alt=\"text\" className=\"paper_image\" />\n            <h4>Convolutional Network</h4>\n            <p>\n              In this kernel I build ConvNet to interpret words from an image of\n              lips\n            </p>\n            <p>\n              <a\n                href=\"https://www.kaggle.com/apoorvwatsky/miraclvc1\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"text-blue\"\n              >\n                The data\n              </a>\n            </p>\n            <p>\n              <a\n                href=\"https://www.kaggle.com/pranavcoder/\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"text-blue\"\n              >\n                Coming Soon on Kaggle\n              </a>\n            </p>\n          </Paper>\n        </div>\n        <div className=\"flex\">\n          <h1>| | |</h1>\n        </div>\n\n        <Element name=\"contact-me\" className=\"element\">\n          <h3 className=\"margin-left-20px\">Contact Me</h3>\n          <div className=\"flex flex-direction-column contact-me\">\n            <TextField\n              className=\"contact-me-input\"\n              label=\"Name\"\n              variant=\"outlined\"\n              onChange={(event) => {\n                const {\n                  target: { value },\n                } = event;\n                setName(value);\n              }}\n            />\n            <TextField\n              className=\"contact-me-input\"\n              label=\"Message\"\n              variant=\"outlined\"\n              multiline\n              rowsMax={6}\n              onChange={(event) => {\n                const {\n                  target: { value },\n                } = event;\n                setMsg(value);\n              }}\n            />\n            <div className=\"flex color-grey\">\n              <p>\n                * Clicking on <i>SEND</i> will redirect you to your email\n                client. Please <b>allow</b> navigation if prompted{\" \"}\n              </p>\n            </div>\n            <div className=\"flex\">\n              <Button\n                className=\"m-10-px\"\n                variant=\"contained\"\n                onClick={() => {\n                  sendEmail(name, msg);\n                }}\n              >\n                Send\n              </Button>\n              <Button\n                className=\"m-10-px\"\n                variant=\"contained\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href=\"https://drive.google.com/file/d/1ERpDlvblMEPjUuUvF_E16uVJL_kvQJRP/view?usp=sharing\"\n              >\n                My Resume\n              </Button>\n            </div>\n          </div>\n        </Element>\n\n        <div className=\"flex footer\">\n          <Button\n            href=\"https://github.com/pbpranavk/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <GitHubIcon className=\"footer-icon margin-right-10px\" />\n          </Button>\n          <Button\n            href=\"https://twitter.com/pbpranav24/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <TwitterIcon className=\"footer-icon\" />\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","\n\nconst sendEmail = (name: string,  msg: string) =>{\n    window.open('mailto:pbpranav24@gmail.com?subject='+name+'&body='+msg);\n}\n\nexport {sendEmail};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}